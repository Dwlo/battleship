#!/bin/bash

####### Start: Customize variables #######
# Set your current server location
#BATTLESHIP_URL='http://localhost:3000'
BATTLESHIP_URL='http://battleship.dwlo.cloudbees.net'

####### End:  Customize variables #######


PLAYER="NO PLAYER SET!"
GAME_STATUS="running"
FIRE_STATUS="N/A"
DELAY_SEC=1

BIN_DIR=`dirname $0`
source ${BIN_DIR}/json-parser

read_input() {
    read -t ${DELAY_SEC} discard
    read -p "$1" CHOICE
}

freeze(){
    read -t $1 discard
}

use_game_id() {
    read_input "GAME ID ? "
    GAME_ID=${CHOICE}
}

generate_game_id() {
    RESPONSE=$(curl -s -X POST "${BATTLESHIP_URL}/games")
    GAME_ID=$(jsonElement "game-id" ${RESPONSE})
}

init_game() {
    clear
    echo -e "\n-- GAME INITIALIZATION"

    read_input "PLAYER PSEUDO (ONE LETTER) ? "
    PLAYER=${CHOICE}

    echo -e "--- (u) I'VE GOT A GAME ID"
    echo -e "--- (g) GENERATE A NEW GAME ID"
    read_input "CHOICE ? "
    case $CHOICE in
        u|U) use_game_id  ;;
        g|G) generate_game_id ;;
        *) echo WRONG CHOICE ;;
    esac

    BATTLESHIP_GAME_ID=${GAME_ID}
    echo -e "\nCURRENT GAME URL IS: ${BATTLESHIP_URL}"
    echo -e "CURRENT GAME ID IS : ${GAME_ID}\n"
}

show_battlefield() {
    ${BIN_DIR}/show-battlefield ${BATTLESHIP_URL} ${GAME_ID}
    echo -e "\n"
}

fire() {
    read_input "ROW (0 ~ 4) ? "
    ROW=$CHOICE
    read_input "COL (0 ~ 4) ? "
    COL=$CHOICE

    echo -e "\n>> FIRE"

    echo -e "- URL    = ${BATTLESHIP_URL}"
    echo -e "- GAME   = ${GAME_ID}"
    echo -e "- PLAYER = ${PLAYER}"
    echo -e "- ROW    = ${ROW}"
    echo -e "- COL    = ${COL}"

    FIRE_RESPONSE=$(${BIN_DIR}/fire ${BATTLESHIP_URL} ${GAME_ID} ${PLAYER} ${ROW} ${COL})

    echo -e "\n>> RESULT"
    echo -e "Fire response: ${FIRE_RESPONSE}"
}

set_fire_request-statuses() {
    GAME_STATUS=$(jsonElement "game-status" ${FIRE_RESPONSE})
    FIRE_STATUS=$(jsonElement "fire-status" ${FIRE_RESPONSE})
}

show_boom_message() {
    if [ "${FIRE_STATUS}" == "success" ]; then
        echo -e "\n*** Nice shot !!! ***\n"
    fi
}

summary() {
    echo -e "\n\n"
    echo -e ">> GAME OVER !"
    echo -e ">>> FINAL RESULTS"
    show_battlefield
    echo -e "${FIRE_RESPONSE}"
}

init_game
while [ "${GAME_STATUS}" != "over"  ];
do
    fire && set_fire_request-statuses ${FIRE_RESPONSE} && show_battlefield && show_boom_message
    freeze ${DELAY_SEC}
done

summary
